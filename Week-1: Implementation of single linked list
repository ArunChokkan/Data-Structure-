

#include<stdio.h>
#include<stdlib.h>
struct node{
        int data;
        struct node*link;
};

struct node *ptr,*head,*dis,*temp,*ptr1;
void insertbeg();
void insertlast();
void show();
void delete();
void newnode();
void search();
void insertran();
int lenght(int);
int main(){
        int a,fg=0;
        while(1){
        printf("\nmain menu,\n1.insert at beginning\n2.insert at last\n3.insert at random position\n4.display\n5.delete\n6.search\n7.Lenght of the list\n8.exit\n\n\nEnter your choice: ");
        scanf("%d",&a);
        switch(a)
        {
                case 1:
                    insertbeg();
                    break;
               case 2:
                      insertlast();
                      break;
               case 3:
                      insertran();
                      break;
               
               case 4:
                     show();
                     break;     
               case 5:
                     delete();
                     break;   
               case 6:
                     search() ;
                     break;
               case 7:
                     
                     
                     ptr1=head;
                     while (ptr1!=NULL)//to check the length of the list
                     {
                          ptr1=ptr1->link;
                           fg+=1;
                     }

                     printf("\nThe length of the list is %d.\n",fg);
                     break;         
               case 8:
                     exit(0)  ;
                     break;    
               default:
                      printf("\nInvalid choice.");
                      break;
        }
        }
}

void insertbeg(){
        printf("\nEnter a element: ");
        if (head == NULL)
                newnode();
        else{
                ptr=malloc(sizeof(struct node*));

                scanf("%d",&ptr->data);
                ptr->link=head;
                head=ptr;
        }
}
void insertlast(){
        printf("\nEnter a element: ");
        if(head == NULL)
                newnode();
        else{
                ptr=malloc(sizeof(struct node*));

                scanf("%d",&ptr->data);
                ptr->link=NULL;
                temp=head;
                while(temp->link!=NULL)
                        temp=temp->link;
                temp->link=ptr;
                
        }
}

void newnode(){
        head=malloc(sizeof(struct node*));
        scanf("%d",&head->data);
        head->link=NULL;
}

void show(){
        if (head==NULL)
                printf("\nEmpty list\n");
        else{

        dis=head;
        printf("\n\nprinting the elements: ");
        while(dis!=NULL)
        {
                printf("%d ",dis->data);
                dis=dis->link;
        }
        printf("\n");
        }
}

void delete(){
        dis=head;
        if(head==NULL)
           printf("\nEmpty List\n");
        int d,cnt=0;
        printf("Enter the element to delete: ");
        scanf("%d",&d);
        while(dis->data!=d && dis->link!=NULL){
                temp=dis;
                dis=dis->link;
        }
        if(head->data==d)//for first node
        {
        head=head->link;
        free(dis);
         /*
            or
          temp=dis;
          temp=temp->link;
          free(dis);
          head=temp;*/
          cnt=1;
        }
        
        else if (dis->data==d )
        {
        temp->link=dis->link;
        free(dis);
        cnt=1;}
        if(cnt==0)
                printf("\nelement was not found.\n");
        else
                printf("\nNode was deleted.\n");
}



void search()
{
   ptr=head;
   int s,flg=0;
   printf("\nEnter the element to search: ");
   scanf("%d",&s);

   while(ptr->data!=s && ptr->link!=NULL)
   {
     ptr=ptr->link;
     flg+=1;//the position of the element 
   }
   if(ptr->data==s)
     printf("\nThe element was found at position %d.\n",flg+1);

   else
     printf("\nElement was not found");
}



void insertran()
{

if (head==NULL){
    printf("\nEnter a element: ");
    newnode();
    }
    
else{
    
   int p;//p-position, fg- length of the list
   printf("\nEnter the position to insert: ");
   scanf("%d",&p);

   int fg=0;
   struct node*ptr1;
   ptr1=head;
   while (ptr1!=NULL)//to check the length of the list
   {
     ptr1=ptr1->link;
     fg+=1;
   }

   if(p==1 && fg>=p)//to insert node at beginning 
   {
      insertbeg();
      printf("\nNode was inserted successfully.\n");
   }

   else if(p==fg+1)//to insert node at last
   {
      insertlast();
      printf("\nNode was inserted successfully.\n");
   }

   else if(fg>=p && p!=0)//check if it is a valid position 
      //to insert node at inbetween position 
   {
      temp=head;
      for(int i=0;i<p-1 && temp->link!=NULL;i++)
      {
         dis=temp;
        temp=temp->link;
      }



      ptr=malloc(sizeof(struct node*));
      printf("\nEnter a element to insert: ");
      scanf("%d",&ptr->data);

      ptr->link=temp;
      dis->link=ptr;
      printf("\nNode was inserted successfully.\n");

   }


    else
       printf("\nNode was not inserted because invalid position.\n");
  
   }

}



